/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.Account;
import Model.Client;
import java.text.SimpleDateFormat;
//import java.sql.SQLException;
import java.util.LinkedList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
//import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author maverick
 */
public class IntManagerClients extends javax.swing.JDialog {
    
    LinkedList<Client> clientList = new LinkedList<>();
    DefaultTableModel model;
    

    /**
     * Creates new form IntClients
     */
    public IntManagerClients(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
//        clientsDbPreset();
        showClients();
    }

    IntManagerClients() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_clientName = new javax.swing.JTextField();
        txt_clientId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_clientAddress = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_clientPhone = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_clientEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_clientAccount = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_clientBalance = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        list_clientsGui = new javax.swing.JList<>();
        btn_searchClientId = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btn_addClient = new javax.swing.JButton();
        btn_editClient = new javax.swing.JButton();
        btn_deleteClient = new javax.swing.JButton();
        btn_goHome = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtb_clients = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("GESTOR DE CLIENTES");

        jLabel2.setText("Nombre");

        jLabel3.setText("Documento");

        jLabel4.setText("Dirección");

        jLabel5.setText("Teléfono");

        jLabel6.setText("Correo");

        jLabel7.setText("No. de Cuenta");

        jLabel8.setText("Saldo");

        jScrollPane2.setViewportView(list_clientsGui);

        btn_searchClientId.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Public/search_black.png"))); // NOI18N
        btn_searchClientId.setText("Buscar cliente");
        btn_searchClientId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchClientIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_clientBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(171, 171, 171))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_clientAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_clientEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_clientPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_clientAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_clientId, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_clientName, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btn_searchClientId))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_clientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_clientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_clientAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_clientPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txt_clientEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txt_clientAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txt_clientBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_searchClientId)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        btn_addClient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Public/add.png"))); // NOI18N
        btn_addClient.setText("Añadir cliente");
        btn_addClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addClientActionPerformed(evt);
            }
        });

        btn_editClient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Public/edit.png"))); // NOI18N
        btn_editClient.setText("Editar información");
        btn_editClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_editClientMouseEntered(evt);
            }
        });
        btn_editClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editClientActionPerformed(evt);
            }
        });

        btn_deleteClient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Public/delete.png"))); // NOI18N
        btn_deleteClient.setText("Borrar cliente");
        btn_deleteClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteClientActionPerformed(evt);
            }
        });

        btn_goHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Public/return_blue.png"))); // NOI18N
        btn_goHome.setText("Regresar");
        btn_goHome.setMaximumSize(new java.awt.Dimension(136, 30));
        btn_goHome.setMinimumSize(new java.awt.Dimension(136, 30));
        btn_goHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_goHomeMouseClicked(evt);
            }
        });
        btn_goHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_goHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(btn_addClient)
                .addGap(18, 18, 18)
                .addComponent(btn_editClient)
                .addGap(18, 18, 18)
                .addComponent(btn_deleteClient)
                .addGap(18, 18, 18)
                .addComponent(btn_goHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_addClient)
                    .addComponent(btn_editClient)
                    .addComponent(btn_deleteClient)
                    .addComponent(btn_goHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));

        jtb_clients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Documento", "Dirección", "Teléfono", "Correo", "No. de cuenta", "Cant. Tarjetas", "Saldo"
            }
        ));
        jtb_clients.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtb_clientsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtb_clients);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addClientActionPerformed
        // TODO add your handling code here:
//        addClient();
    }//GEN-LAST:event_btn_addClientActionPerformed

    private void btn_goHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_goHomeActionPerformed
        // TODO add your handling code here:
        IntManagerClients.this.setVisible(false); // Close the JDialog
    }//GEN-LAST:event_btn_goHomeActionPerformed

    private void btn_goHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_goHomeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_goHomeMouseClicked

    private void btn_editClientMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_editClientMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_editClientMouseEntered

    private void btn_editClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editClientActionPerformed
        // TODO add your handling code here:
        editClient();
    }//GEN-LAST:event_btn_editClientActionPerformed

    private void btn_searchClientIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchClientIdActionPerformed
        // TODO add your handling code here:
        searchClient();
    }//GEN-LAST:event_btn_searchClientIdActionPerformed

    private void jtb_clientsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtb_clientsMouseClicked
        // TODO add your handling code here:
        int row = jtb_clients.getSelectedRow();
        System.out.println(row);
        if(row < 0){
            JOptionPane.showMessageDialog(this, "Debes seleccionar un campo");
        }else{
            String clientName = (String)jtb_clients.getValueAt(row, 0).toString();
            String clientId = (String)jtb_clients.getValueAt(row, 1).toString();
            String clientAdress = (String)jtb_clients.getValueAt(row, 2).toString();
            String clientPhone = (String)jtb_clients.getValueAt(row, 3).toString();
            String clientEmail = (String)jtb_clients.getValueAt(row, 4).toString();
            String clientAccount = (String)jtb_clients.getValueAt(row, 5).toString();
            double clientBalance = Double.parseDouble((String)jtb_clients.getValueAt(row, 6).toString());

            txt_clientName.setText(clientName);
            txt_clientId.setText(clientId);
            txt_clientAddress.setText(clientAdress);
            txt_clientPhone.setText(clientPhone);
            txt_clientEmail.setText(clientEmail);
            txt_clientAccount.setText(clientAccount);
            txt_clientBalance.setText("" + clientBalance);
        }
    }//GEN-LAST:event_jtb_clientsMouseClicked

    private void btn_deleteClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteClientActionPerformed
        // TODO add your handling code here:
        deleteClient();
    }//GEN-LAST:event_btn_deleteClientActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IntManagerClients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IntManagerClients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IntManagerClients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IntManagerClients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                IntManagerClients dialog = new IntManagerClients(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    void showClients() {
            model = (DefaultTableModel)jtb_clients.getModel();
            model.setRowCount(0);
            for (Client client : clientList) {
                model.addRow(new Object[]{client.getName(), client.getId(), client.getAddress(), client.getPhone(), client.getEmail(), client.getAccount().getAccountNumber(),client.getAccount().getBalance()});
            }
            jtb_clients.setModel(model);
    }
    
//    void addClient() {
//        try{
//            String clientName = txt_clientName.getText();
//            String clientId = txt_clientId.getText();
//            String clientAddress = txt_clientAddress.getText();
//            String clientPhone = txt_clientPhone.getText();
//            String clientEmail = txt_clientEmail.getText();
//            String clientAccount = txt_clientAccount.getText();
//            double clientBalance = Double.parseDouble(txt_clientBalance.getText());
//
//            if(clientName.equals("")|| clientId.equals("") || clientAddress.equals("") || clientPhone.equals("") || clientEmail.equals("") || clientAccount.equals("") /*|| clientBalance. == ""*/) {
//                JOptionPane.showMessageDialog(this, "Ingrese los valores requeridos en los campos!");
//            }else {
//                Account account = new Account(clientBalance, clientAccount);
//                Client client = new Client(clientName, clientId, clientAddress, clientPhone, clientEmail, account);
//
//                this.clientList.add(client);
//                addClientsList();
//                JOptionPane.showMessageDialog(rootPane, "El cliente ha sido añadido con éxito");
//                cleanClientInputData();
//                showClients();
//            }
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "Ingrese un valor adecuado para el saldo");
//        }
//    }
    
    void addClientsList() {
        DefaultListModel model = new DefaultListModel();
        int indexModel = 0;
        for (Client client : clientList) {
            String clientInfo = client.getName() + "-" + client.getId() + "-" + client.getAddress() + "-" + client.getPhone() + "-" + client.getEmail() + "-" + client.getAccount().getAccountNumber() + "- $" + client.getAccount().getBalance();
            model.add(indexModel, clientInfo);
            indexModel++;
        }
        list_clientsGui.setModel(model);
    }
    
    void searchClient() {
        String searchClientId = txt_clientId.getText();
        boolean clientFound = false;
        for (Client client : clientList) {
            if (searchClientId.equals(client.getId())) {
                //jlInfoClient.setText("<html> Nombre:             " + client.getName() + "<br/>Documento:          " + client.getId() + "Dirección:          " + client.getAddress() + "<br/>Teléfono:           " + client.getPhone() + "<br/>Correo electrónico: " + client.getEmail() + "<br/>Cuenta bancaria:    " + client.getAccount().getAccountNumber() + "<br/>Saldo disponible:   $" + client.getAccount().getBalance() + "</html>");
                String newClientName = client.getName();
                txt_clientName.setText(newClientName);
                String newClientId = client.getId();
                txt_clientId.setText(newClientId);
                String newClientAddress = client.getAddress();
                txt_clientAddress.setText(newClientAddress);
                String newClientPhone = client.getPhone();
                txt_clientPhone.setText(newClientPhone);
                String newClientEmail = client.getEmail();
                txt_clientEmail.setText(newClientEmail);
                String newClientAccount = client.getAccount().getAccountNumber();
                txt_clientAccount.setText(newClientAccount);
                double newClientBalance = client.getAccount().getBalance();
                txt_clientBalance.setText("" + newClientBalance);
                clientFound = true;
                showClients();
            }
        }
        if (!clientFound) {
            JOptionPane.showMessageDialog(this, "No se encontró cliente con el documento " + searchClientId + " suministrado!");
        }
    }
    
    void editClient() {
        String searchClientId = txt_clientId.getText();
        boolean clientFound = false;
        for (Client client : clientList) {
            if (searchClientId.equals(client.getId())) {
//                jlInfoClient.setText("<html> Nombre:             " + client.getName() + "<br/>Documento:          " + client.getId() + "Dirección:          " + client.getAddress() + "<br/>Teléfono:           " + client.getPhone() + "<br/>Correo electrónico: " + client.getEmail() + "<br/>Cuenta bancaria:    " + client.getAccount().getAccountNumber() + "<br/>Saldo disponible:   $" + client.getAccount().getBalance() + "</html>");
                String edClientName = txt_clientName.getText();
                client.setName(edClientName);
                String edClientId = txt_clientId.getText();
                client.setId(edClientId);
                String edClientAddress = txt_clientAddress.getText();
                client.setAddress(edClientAddress);
                String edClientPhone = txt_clientPhone.getText();
                client.setPhone(edClientPhone);
                String edClientEmail = txt_clientEmail.getText();
                client.setEmail(edClientEmail);
                String edClientAccount = txt_clientAccount.getText();
                String edClientBalance = txt_clientBalance.getText();
                Account account = new Account(edClientAccount, edClientBalance);
                client.setAccount(account);
                clientFound = true;
                
                this.clientList.add(client);
                addClientsList();
                cleanClientInputData();
                showClients();
            }
        }
        if (!clientFound) {
            JOptionPane.showMessageDialog(this, "No se encontró cliente con el documento " + searchClientId + " suministrado!");
        }
    }
    
    void deleteClient() {
        String searchClientID = txt_clientId.getText();
        boolean clientFound = false;
        for (Client client : clientList) {
            if(searchClientID.equals(client.getId())) {
                this.clientList.remove(client);
                addClientsList();
                showClients();
                JOptionPane.showMessageDialog(this, "El cliente con documento No." + searchClientID + "");
            }else {
                JOptionPane.showMessageDialog(this, "No se encontró cleinte con el documento " + searchClientID + " suministrado!");
            }
        }
    }
    
    public void cleanClientInputData() {
        txt_clientName.setText("");
        txt_clientId.setText("");
        txt_clientAddress.setText("");
        txt_clientPhone.setText("");
        txt_clientEmail.setText("");
        txt_clientAccount.setText("");
        txt_clientBalance.setText("");
    }
    
    void clientsDbPreset() {
        Account account_01 = new Account(100000, "10001000-1", "1111 1111 1111" , "15/05/25", 111);
        Client client_01 = new Client("Pepito Perez", "1000001", "Cra 1 con calle 1", "300111111", "pepito@gmail.com", account_01);
        clientList.add(client_01);
        Account account_02 = new Account(200000, "20002000-2", "2222 2222 2222" , "16/06/26", 222);
        Client client_02 = new Client("Pedro Picapiedra", "1000002", "Cra 2 con calle 2", "300222222", "pedro.picapiedra@gmail.com", account_02);
        clientList.add(client_02);
        Account account_03 = new Account(300000, "30003000-3", "3333 3333 3333" , "17/07/27", 333);
        Client client_03 = new Client("Pablo Marmol", "1000003", "Cra 3 con calle 3", "300333333", "pablo.marmol@gmail.com", account_03);
        clientList.add(client_03);
        Account account_04 = new Account(400000, "40004000-4", "4444 4444 4444" , "18/08/28", 444);
        Client client_04 = new Client("John Snow", "1000004", "Cra 4 con calle 4", "300444444", "jsnow@gmail.com", account_04);
        clientList.add(client_04);
        Account account_05 = new Account(500000, "50005000-5", "5555 5555 5555" , "19/09/29", 555);
        Client client_05 = new Client("Bruce Banner", "1000005", "Cra 5 con calle 5", "300555555", "hulk@gmail.com", account_05);
        clientList.add(client_05);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_addClient;
    private javax.swing.JButton btn_deleteClient;
    private javax.swing.JButton btn_editClient;
    private javax.swing.JButton btn_goHome;
    private javax.swing.JButton btn_searchClientId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtb_clients;
    private javax.swing.JList<String> list_clientsGui;
    private javax.swing.JTextField txt_clientAccount;
    private javax.swing.JTextField txt_clientAddress;
    private javax.swing.JTextField txt_clientBalance;
    private javax.swing.JTextField txt_clientEmail;
    private javax.swing.JTextField txt_clientId;
    private javax.swing.JTextField txt_clientName;
    private javax.swing.JTextField txt_clientPhone;
    // End of variables declaration//GEN-END:variables
}
